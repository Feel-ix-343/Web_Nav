function waitForMsgType(e,r){return new Promise((t=>{e.addEventListener("message",(function n({data:s}){null!=s&&s.type===r&&(e.removeEventListener("message",n),t(s))}))}))}let _workers;waitForMsgType(self,"wasm_bindgen_worker_init").then((async e=>{const r=await import("../../..");await r.default(e.module,e.memory),postMessage({type:"wasm_bindgen_worker_ready"}),r.wbg_rayon_start_worker(e.receiver)}));export async function startWorkers(e,r,t){const n={type:"wasm_bindgen_worker_init",module:e,memory:r,receiver:t.receiver()};_workers=await Promise.all(Array.from({length:t.numThreads()},(async()=>{const e=new Worker(new URL("./workerHelpers.js",import.meta.url),{type:"module"});return e.postMessage(n),await waitForMsgType(e,"wasm_bindgen_worker_ready"),e}))),t.build()}